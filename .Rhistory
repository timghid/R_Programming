?c
z
c(z,555)
c(z,555,z)
z*2+100
msSqrt<-sqrt(z-1)
mySqrt<-sqrt(z-1)
mySqrt
myDiv<-z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
mySeq<-seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
bye()
for (i in 1:10){}
for (i in 1:10){print(i)}
?seq_along
x<-martix(1:6,2,3)
x<-matrix(1:6,2,3)
x
x<-matrix(1:6,2,4)
x<-matrix(1:20,2,4)
x
?matrix
x<-matrix(1:20,2,4,byrow=TRUE)
x
x<-matrix(1:6,2,3)
for (i in seq_len(nrow(x))){}
for (i in seq_len(nrow(x))){for(j in seq_len(ncol(x))){print(x[i,j])}}
?seq_len
while(count<10) {}
while(count<10) { }
while(count<10) { }
while(count<10) { }
while(count<10) { }
}
}
z<-5
while(z>=3 && x<=10){
z<-5
while(z>=3 && x<=10){
print(z)
coin<-rbinom(1,1,0.5)
if(coin==1) {
x<-z+1
}else{
z<-z-1
}
}
q()
quit
exit
bye()
end
}else{
z<-z+1
z<-5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if(coin==1) {
z<-z+1
}else{
z<-z-1
}
}
z<-5
while(z>=3 && z<=10){
print(z)
coin<-rbinom(1,1,0.5)
if(coin==1) {
z<-z+1
}else{
z<-z-1
}
}
?formals
formals(matrix())
formals(matrix)
formals(sd)
?sd
?formals
args(lm)
args(matrix)
args(paste)
args(c)
args(cat)
?cat
cat("1234","asdf")
paste("a","b",se="i")
se
swirl()
library(swirl)
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","Name","is")
my_char<-("My","Name","is")
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"Dave")
my_name
paste(my_char,my_name,collapse=" ")
paste(my_name,collapse=" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
3x
x * x
3* x
y<-rnorm(1000)
z<-rep(NA,1000)
myData <- sample(c(y,z),100)
myNA<-is.na(myData)
myNA
myData ==NA
sum(myNA)
myData
0/0
inf-inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector[1:20]
myVector<-[1:20]
myVector<-(1:20)
myVector<-c(1:20)
myVector<-1:20
myVector
dim(myVector)
length(myVector)
dim(myVector)<-c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix<-myVector
?matrix
myMatrix2<-matrix(1:20,4,5)
identical(myMatrix,myMatrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,myMatrix)
myData<-data.frame(patients,myMatrix)
myData
class(myData)
cnames<-c("patient",age","weight","bp","rating","test"")
cnames<-c("patient","age","weight","bp","rating","test"")
q
cnames<-c("patient","age","weight","bp","rating","test"")
q
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames,myData)
colnames(myData)<-cnames
myData
setwd("~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming")
?read
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
pollutantData<-read.csc(c(i,".csv",header=TRUE))
}
}
polutantmean("specdata","nitrate",1:2)
pollutantmean("specdata","nitrate",1:2)
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
pollutantData<-read.csv(c(i,".csv",header=TRUE))
}
}
pollutantmean("specdata","nitrate",1:2)
pollutantmean("specdata","nitrate",1:2)
i=1
name<-c(i,".csv")
name
name<-c(i,".csv")
name<-paste(i,".csv",collapse='')
name
i
name<-paste(i,".csv",collapse="")
name
name<-paste(i,".csv",sep="")
name
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
pollutantData<-read.csv(paste(i,".csv",sep=""),header=TRUE))
}
}
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
pollutantData<-read.csv(paste(i,".csv",sep=""),header=TRUE)
}
}
pollutantmean("specdata","nitrate",1:3)
getwd()
pollutantmean("specdata","nitrate",1:3)
i
directory
pollutant
q
name<-paste(directory,"/",i,".csv",sep="")
directory<-"specdata"
name<-paste(directory,"/",i,".csv",sep="")
name
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
pollutantData<-read.csv(paste(directory,"/",i,".csv",sep=""),header=TRUE)
}
}
pollutantmean("specdata","nitrate",1:3)
getwd()
myFileName<-sprintf("%03d",i)
myFileName
myFileName<-paste(getWD(),"/",sprintf("%03d",i),".csv",sep="")
myFileName<-paste(getwd(),"/",sprintf("%03d",i),".csv",sep="")
myFileName
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
myFileName<-paste(getwd(),"/",sprintf("%03d",i),".csv",sep="")
pollutantData<-read.csv(myFile,header=TRUE)
}
}
pollutantmean("specdata","nitrate",1:3)
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
myFileName<-paste(getwd(),"/",sprintf("%03d",i),".csv",sep="")
pollutantData<-read.csv(myFileName,header=TRUE)
}
}
pollutantmean("specdata","nitrate",1:3)
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
myFileName<-paste(getwd(),"/",directory,"/",sprintf("%03d",i),".csv",sep="")
pollutantData<-read.csv(myFileName,header=TRUE)
}
}
pollutantmean("specdata","nitrate",1:3)
pollutantmean("specdata","nitrate",3)
pollutantData
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
myFileName<-paste(getwd(),"/",directory,"/",sprintf("%03d",i),".csv",sep="")
pollutantData<-read.csv(myFileName,header=TRUE)
}
pollutantdata
}
pollutantmean("specdata","nitrate",3)
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
myFileName<-paste(getwd(),"/",directory,"/",sprintf("%03d",i),".csv",sep="")
pollutantData<-read.csv(myFileName,header=TRUE)
}
pollutantData
}
pollutantmean("specdata","nitrate",3)
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for(i in 1:id) {
myFileName<-paste(getwd(),"/",directory,"/",sprintf("%03d",i),".csv",sep="")
pollutantData<-read.csv(myFileName,header=TRUE)
allPollutantData<-cbind(allPollutantData,pollutantData)
}
allPollutantData
}
pollutantmean("specdata","nitrate",3)
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
allPollutantData<-""
for(i in 1:id) {
myFileName<-paste(getwd(),"/",directory,"/",sprintf("%03d",i),".csv",sep="")
pollutantData<-read.csv(myFileName,header=TRUE)
allPollutantData<-cbind(allPollutantData,pollutantData)
}
allPollutantData
}
pollutantmean("specdata","nitrate",3)
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
allPollutantData<-""
for(i in 1:id) {
myFileName<-paste(getwd(),"/",directory,"/",sprintf("%03d",i),".csv",sep="")
pollutantData<-read.csv(myFileName,header=TRUE)
allPollutantData<-rbind(allPollutantData,pollutantData)
}
allPollutantData
}
pollutantmean("specdata","nitrate",3)
pollutantmean("specdata","nitrate",1)
pollutantmean <- function(directory,pollutant,id=1:332){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
allPollutantData<-NULL
for(i in 1:id) {
myFileName<-paste(getwd(),"/",directory,"/",sprintf("%03d",i),".csv",sep="")
pollutantData<-read.csv(myFileName,header=TRUE)
allPollutantData<-rbind(allPollutantData,pollutantData)
}
allPollutantData
}
pollutantmean("specdata","nitrate",3)
allPollutanteData[[1]]
allPollutantData
pollutantmean
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
myFileName<-paste(getwd(),"/",directory,"/",sprintf("%03d",i),".csv",sep="")
pollutantmean("specdata","nitrate",3)
allPollutantData
pollutantmean("specdata","nitrate",3)
dims(allPollutantData)
dim(allPollutantData)
attributes(allPollutantData)
attributes(allPollutantData)
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
pollutantmean("specdata","nitrate",1:3)
attributes(allPollutantData)
?is.na
help(is.na)
is.na
pollutantmean("specdata","nitrate",1:3)
colnames(allPollutantData)
allPollutantData[["sulfate"]]
colnames(allPollutantData)
dim(allPollutantData)
colnames(allPollutantData)
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
pollutantmean("specdata","nitrate",1:3)
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
allPollutantData
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
}
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
assign(myColName,is.na(allPollutantData[myColName]))
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
pollutantmean("specdata","nitrate",1:3)
dims("nitrte")
dim("nitrate")
myColName
assign(myColName,is.na(allPollutantData[[myColName]]))
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
}
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
pollutantmean("specdata","nitrate",1:3)
debugSource('~/Documents/My Documents/dave/MyTraining/DataScienceCourses/GIT_Repository/datasciencecoursera/R_Programming/pollutantmean.R', echo=TRUE)
pollutantmean("specdata","nitrate",1:3)
sulfate
nitrate
nitrate[[279]]
nitrate[[275:280]]
nitrate[[275]]
sulfate[[279]]
sulfate[[278]]
sulfate[[280]]
sulfate[[285]]
